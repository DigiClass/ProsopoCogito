/**
 * This class is generated by jOOQ
 */
package models.generated.tables.records


import java.lang.Integer
import java.lang.String
import java.sql.Timestamp

import javax.annotation.Generated

import models.generated.tables.SharingEventLog

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class SharingEventLogRecord extends UpdatableRecordImpl[SharingEventLogRecord](SharingEventLog.SHARING_EVENT_LOG) with Record5[Integer, String, String, Timestamp, Integer] {

	/**
	 * Setter for <code>public.sharing_event_log.id</code>.
	 */
	def setId(value : Integer) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>public.sharing_event_log.id</code>.
	 */
	def getId : Integer = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[Integer]
	}

	/**
	 * Setter for <code>public.sharing_event_log.type_of_action</code>.
	 */
	def setTypeOfAction(value : String) : Unit = {
		setValue(1, value)
	}

	/**
	 * Getter for <code>public.sharing_event_log.type_of_action</code>.
	 */
	def getTypeOfAction : String = {
		val r = getValue(1)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>public.sharing_event_log.action_by</code>.
	 */
	def setActionBy(value : String) : Unit = {
		setValue(2, value)
	}

	/**
	 * Getter for <code>public.sharing_event_log.action_by</code>.
	 */
	def getActionBy : String = {
		val r = getValue(2)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>public.sharing_event_log.action_at</code>.
	 */
	def setActionAt(value : Timestamp) : Unit = {
		setValue(3, value)
	}

	/**
	 * Getter for <code>public.sharing_event_log.action_at</code>.
	 */
	def getActionAt : Timestamp = {
		val r = getValue(3)
		if (r == null) null else r.asInstanceOf[Timestamp]
	}

	/**
	 * Setter for <code>public.sharing_event_log.policy_id</code>.
	 */
	def setPolicyId(value : Integer) : Unit = {
		setValue(4, value)
	}

	/**
	 * Getter for <code>public.sharing_event_log.policy_id</code>.
	 */
	def getPolicyId : Integer = {
		val r = getValue(4)
		if (r == null) null else r.asInstanceOf[Integer]
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------
	override def key() : Record1[Integer] = {
		return super.key.asInstanceOf[ Record1[Integer] ]
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row5[Integer, String, String, Timestamp, Integer] = {
		super.fieldsRow.asInstanceOf[ Row5[Integer, String, String, Timestamp, Integer] ]
	}

	override def valuesRow : Row5[Integer, String, String, Timestamp, Integer] = {
		super.valuesRow.asInstanceOf[ Row5[Integer, String, String, Timestamp, Integer] ]
	}
	override def field1 : Field[Integer] = SharingEventLog.SHARING_EVENT_LOG.ID
	override def field2 : Field[String] = SharingEventLog.SHARING_EVENT_LOG.TYPE_OF_ACTION
	override def field3 : Field[String] = SharingEventLog.SHARING_EVENT_LOG.ACTION_BY
	override def field4 : Field[Timestamp] = SharingEventLog.SHARING_EVENT_LOG.ACTION_AT
	override def field5 : Field[Integer] = SharingEventLog.SHARING_EVENT_LOG.POLICY_ID
	override def value1 : Integer = getId
	override def value2 : String = getTypeOfAction
	override def value3 : String = getActionBy
	override def value4 : Timestamp = getActionAt
	override def value5 : Integer = getPolicyId

	override def value1(value : Integer) : SharingEventLogRecord = {
		setId(value)
		this
	}

	override def value2(value : String) : SharingEventLogRecord = {
		setTypeOfAction(value)
		this
	}

	override def value3(value : String) : SharingEventLogRecord = {
		setActionBy(value)
		this
	}

	override def value4(value : Timestamp) : SharingEventLogRecord = {
		setActionAt(value)
		this
	}

	override def value5(value : Integer) : SharingEventLogRecord = {
		setPolicyId(value)
		this
	}

	override def values(value1 : Integer, value2 : String, value3 : String, value4 : Timestamp, value5 : Integer) : SharingEventLogRecord = {
		this.value1(value1)
		this.value2(value2)
		this.value3(value3)
		this.value4(value4)
		this.value5(value5)
		this
	}

	/**
	 * Create a detached, initialised SharingEventLogRecord
	 */
	def this(id : Integer, typeOfAction : String, actionBy : String, actionAt : Timestamp, policyId : Integer) = {
		this()

		setValue(0, id)
		setValue(1, typeOfAction)
		setValue(2, actionBy)
		setValue(3, actionAt)
		setValue(4, policyId)
	}
}
