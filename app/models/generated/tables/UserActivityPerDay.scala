/**
 * This class is generated by jOOQ
 */
package models.generated.tables


import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.time.OffsetDateTime
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import models.generated.DefaultSchema
import models.generated.Keys
import models.generated.tables.records.UserActivityPerDayRecord

import org.jooq.Field
import org.jooq.ForeignKey
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl


object UserActivityPerDay {

	/**
	 * The reference instance of <code>user_activity_per_day</code>
	 */
	val USER_ACTIVITY_PER_DAY = new UserActivityPerDay
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class UserActivityPerDay(alias : String, aliased : Table[UserActivityPerDayRecord], parameters : Array[ Field[_] ]) extends TableImpl[UserActivityPerDayRecord](alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[UserActivityPerDayRecord] = {
		classOf[UserActivityPerDayRecord]
	}

	/**
	 * The column <code>user_activity_per_day.id</code>.
	 */
	val ID : TableField[UserActivityPerDayRecord, Integer] = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "")

	/**
	 * The column <code>user_activity_per_day.timestamp</code>.
	 */
	val TIMESTAMP : TableField[UserActivityPerDayRecord, OffsetDateTime] = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), "")

	/**
	 * The column <code>user_activity_per_day.username</code>.
	 */
	val USERNAME : TableField[UserActivityPerDayRecord, String] = createField("username", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), "")

	/**
	 * The column <code>user_activity_per_day.total_activities</code>.
	 */
	val TOTAL_ACTIVITIES : TableField[UserActivityPerDayRecord, Integer] = createField("total_activities", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "")

	/**
	 * Create a <code>user_activity_per_day</code> table reference
	 */
	def this() = {
		this("user_activity_per_day", null, null)
	}

	/**
	 * Create an aliased <code>user_activity_per_day</code> table reference
	 */
	def this(alias : String) = {
		this(alias, models.generated.tables.UserActivityPerDay.USER_ACTIVITY_PER_DAY, null)
	}

	private def this(alias : String, aliased : Table[UserActivityPerDayRecord]) = {
		this(alias, aliased, null)
	}

	override def getPrimaryKey : UniqueKey[UserActivityPerDayRecord] = {
		Keys.PK_USER_ACTIVITY_PER_DAY
	}

	override def getKeys : List[ UniqueKey[UserActivityPerDayRecord] ] = {
		return Arrays.asList[ UniqueKey[UserActivityPerDayRecord] ](Keys.PK_USER_ACTIVITY_PER_DAY)
	}

	override def getReferences : List[ ForeignKey[UserActivityPerDayRecord, _] ] = {
		return Arrays.asList[ ForeignKey[UserActivityPerDayRecord, _] ](Keys.FK_USER_ACTIVITY_PER_DAY_USER_1)
	}

	override def as(alias : String) : UserActivityPerDay = {
		new UserActivityPerDay(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : UserActivityPerDay = {
		new UserActivityPerDay(name, null)
	}
}
