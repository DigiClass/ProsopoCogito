/**
 * This class is generated by jOOQ
 */
package models.generated.tables


import java.lang.Class
import java.lang.Integer
import java.lang.Object
import java.lang.String
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import models.generated.DefaultSchema
import models.generated.Keys
import models.generated.tables.records.SharingEventLogRecord

import org.jooq.Field
import org.jooq.ForeignKey
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl


object SharingEventLog {

	/**
	 * The reference instance of <code>sharing_event_log</code>
	 */
	val SHARING_EVENT_LOG = new SharingEventLog
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class SharingEventLog(alias : String, aliased : Table[SharingEventLogRecord], parameters : Array[ Field[_] ]) extends TableImpl[SharingEventLogRecord](alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[SharingEventLogRecord] = {
		classOf[SharingEventLogRecord]
	}

	/**
	 * The column <code>sharing_event_log.id</code>.
	 */
	val ID : TableField[SharingEventLogRecord, Integer] = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "")

	/**
	 * The column <code>sharing_event_log.type_of_action</code>.
	 */
	val TYPE_OF_ACTION : TableField[SharingEventLogRecord, String] = createField("type_of_action", org.jooq.impl.SQLDataType.VARCHAR, "")

	/**
	 * The column <code>sharing_event_log.action_by</code>.
	 */
	val ACTION_BY : TableField[SharingEventLogRecord, String] = createField("action_by", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), "")

	/**
	 * The column <code>sharing_event_log.action_at</code>.
	 */
	val ACTION_AT : TableField[SharingEventLogRecord, Object] = createField("action_at", org.jooq.impl.DefaultDataType.getDefaultDataType("TIMESTAMP WITH TIME ZONE NO"), "")

	/**
	 * The column <code>sharing_event_log.policy_id</code>.
	 */
	val POLICY_ID : TableField[SharingEventLogRecord, Integer] = createField("policy_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "")

	/**
	 * Create a <code>sharing_event_log</code> table reference
	 */
	def this() = {
		this("sharing_event_log", null, null)
	}

	/**
	 * Create an aliased <code>sharing_event_log</code> table reference
	 */
	def this(alias : String) = {
		this(alias, models.generated.tables.SharingEventLog.SHARING_EVENT_LOG, null)
	}

	private def this(alias : String, aliased : Table[SharingEventLogRecord]) = {
		this(alias, aliased, null)
	}

	override def getPrimaryKey : UniqueKey[SharingEventLogRecord] = {
		Keys.PK_SHARING_EVENT_LOG
	}

	override def getKeys : List[ UniqueKey[SharingEventLogRecord] ] = {
		return Arrays.asList[ UniqueKey[SharingEventLogRecord] ](Keys.PK_SHARING_EVENT_LOG)
	}

	override def getReferences : List[ ForeignKey[SharingEventLogRecord, _] ] = {
		return Arrays.asList[ ForeignKey[SharingEventLogRecord, _] ](Keys.FK_SHARING_EVENT_LOG_USER_1, Keys.FK_SHARING_EVENT_LOG_SHARING_POLICY_1)
	}

	override def as(alias : String) : SharingEventLog = {
		new SharingEventLog(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : SharingEventLog = {
		new SharingEventLog(name, null)
	}
}
