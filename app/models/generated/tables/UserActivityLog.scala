/**
 * This class is generated by jOOQ
 */
package models.generated.tables


import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.time.OffsetDateTime
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import models.generated.DefaultSchema
import models.generated.Keys
import models.generated.tables.records.UserActivityLogRecord

import org.jooq.Field
import org.jooq.ForeignKey
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl


object UserActivityLog {

	/**
	 * The reference instance of <code>user_activity_log</code>
	 */
	val USER_ACTIVITY_LOG = new UserActivityLog
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class UserActivityLog(alias : String, aliased : Table[UserActivityLogRecord], parameters : Array[ Field[_] ]) extends TableImpl[UserActivityLogRecord](alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[UserActivityLogRecord] = {
		classOf[UserActivityLogRecord]
	}

	/**
	 * The column <code>user_activity_log.id</code>.
	 */
	val ID : TableField[UserActivityLogRecord, Integer] = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "")

	/**
	 * The column <code>user_activity_log.timestamp</code>.
	 */
	val TIMESTAMP : TableField[UserActivityLogRecord, OffsetDateTime] = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), "")

	/**
	 * The column <code>user_activity_log.username</code>.
	 */
	val USERNAME : TableField[UserActivityLogRecord, String] = createField("username", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), "")

	/**
	 * The column <code>user_activity_log.activity</code>.
	 */
	val ACTIVITY : TableField[UserActivityLogRecord, String] = createField("activity", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), "")

	/**
	 * Create a <code>user_activity_log</code> table reference
	 */
	def this() = {
		this("user_activity_log", null, null)
	}

	/**
	 * Create an aliased <code>user_activity_log</code> table reference
	 */
	def this(alias : String) = {
		this(alias, models.generated.tables.UserActivityLog.USER_ACTIVITY_LOG, null)
	}

	private def this(alias : String, aliased : Table[UserActivityLogRecord]) = {
		this(alias, aliased, null)
	}

	override def getPrimaryKey : UniqueKey[UserActivityLogRecord] = {
		Keys.PK_USER_ACTIVITY_LOG
	}

	override def getKeys : List[ UniqueKey[UserActivityLogRecord] ] = {
		return Arrays.asList[ UniqueKey[UserActivityLogRecord] ](Keys.PK_USER_ACTIVITY_LOG)
	}

	override def getReferences : List[ ForeignKey[UserActivityLogRecord, _] ] = {
		return Arrays.asList[ ForeignKey[UserActivityLogRecord, _] ](Keys.FK_USER_ACTIVITY_LOG_USER_1)
	}

	override def as(alias : String) : UserActivityLog = {
		new UserActivityLog(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : UserActivityLog = {
		new UserActivityLog(name, null)
	}
}
